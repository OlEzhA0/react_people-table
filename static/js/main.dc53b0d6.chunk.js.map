{"version":3,"sources":["helper/getPeople.js","components/THead.tsx","components/PersonName.tsx","components/TBody.tsx","components/PeopleTable.tsx","components/SearchPeople.tsx","components/AddPersonInputs.tsx","components/AddPersonButton.tsx","components/SexParametrs.tsx","components/AddFather.tsx","components/AddMother.tsx","components/AddPerson.tsx","App.tsx","helper/debounce.js","index.tsx"],"names":["getPeople","a","fetch","people","json","preparedPeopleData","map","i","id","mother","father","age","died","born","century","Math","ceil","children","person","name","filter","join","THead","keysForHeader","sortBy","sortedMethods","sex","className","key","scope","onClick","PersonName","cn","TBody","selectPerson","selectedPerson","length","GoodAge","PeopleTable","useState","setSelectedPerson","Object","keys","serchedPerson","find","SearchPeople","startDebounce","type","aria-label","aria-describedby","placeholder","onChange","e","AddPersonInputs","nameValue","handleInputName","errorName","bornValue","handleInputAgeInfo","errorBorn","diedValue","errorDied","blurValidation","value","onBlur","AddPersonButton","bigDifference","validation","minusDifference","disabled","SexSelect","genderValue","chooseGender","errorGender","checked","AddFather","fatherValue","chooseFather","errorFather","fathers","hidden","male","Date","getTime","AddMother","chooseMother","errorMother","female","pattern","currentYear","getFullYear","AddPerson","addPerson","setNameValue","setBornValue","setDiedValue","gender","setGender","setFather","setMother","setErrorMother","setErrorFather","setErrorName","setErrorBorn","setErrorDied","setMinusDifference","setBigDifference","setErrorGender","reset","onSubmit","preventDefault","target","replace","order","eventValue","blurParam","param","console","log","App","setPeople","query","setQuery","sortMethod","setSortMethod","useEffect","then","debounceWrapper","f","delay","timerId","clearTimeout","args","setTimeout","debounce","filteredPeople","useMemo","searchQuery","toLowerCase","includes","allId","newPerson","max","sortParam","sortType","sortedPeople","sort","b","comperator1","comperator2","Number","localeCompare","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc53b0d6.chunk.js","sourcesContent":["export const getPeople = async () => {\n  const people = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  let preparedPeopleData = await people.json();\n  preparedPeopleData = preparedPeopleData.map((people, i) => ({\n    id: i + 1,\n    ...people,\n    mother: people.mother\n      ? people.mother\n      : '',\n    father: people.father\n      ? people.father\n      : '',\n    age: people.died - people.born,\n    century: Math.ceil(people.died / 100),\n    children: preparedPeopleData.map(person => {\n      if (people.name === person.father || people.name === person.mother) {\n        return person.name;\n      }\n    })\n      .filter(person => person)\n      .join(', '),\n  }))\n\n  return preparedPeopleData;\n}\n","import React from 'react';\n\ninterface Props {\n  keysForHeader: string[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const THead: React.FC<Props> = ({ keysForHeader, sortBy }) => {\n  const sortedMethods: SortMethods = {\n    id: 'number',\n    name: 'string',\n    sex: 'string',\n    born: 'number',\n    father: 'string',\n    mother: 'string',\n    died: 'number',\n    age: 'number',\n    century: 'number',\n    children: 'string',\n  };\n\n  return (\n    <thead className=\"thead-light myThead\">\n      <tr>\n        {keysForHeader.map(key => (\n          <th\n            scope=\"col\"\n            key={key}\n            onClick={() => sortBy(key, sortedMethods[key])}\n          >\n            {key}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  name: string;\n  sex: string;\n}\n\nexport const PersonName: React.FC<Props> = ({ name, sex }) => {\n  return (\n    <td\n      scope=\"row\"\n      className={\n        cn({\n          'Person--name__male': sex === 'm',\n          'Person--name__female': sex === 'f',\n        })\n      }\n    >\n      {name}\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PersonName } from './PersonName';\n\ninterface Props {\n  keysForHeader: string[];\n  people: People[];\n  selectPerson: (id: number) => void;\n  selectedPerson: People[];\n}\n\nexport const TBody: React.FC<Props> = ({\n  keysForHeader,\n  people,\n  selectPerson,\n  selectedPerson,\n}) => (\n  <tbody>\n    {people.map(person => (\n      <tr\n        className={cn(\n          `Person--lived-in-${person.century}`,\n          {\n            'Person--male': person.sex === 'm',\n            'Person--female': person.sex === 'f',\n            'Old-birth': person.born && person.born <= 1650,\n            'Person--selected':\n              selectedPerson.length === 1\n              && selectedPerson[0].id === person.id\n            ,\n          },\n        )}\n        onClick={() => selectPerson(person.id as number)}\n        key={person.name + person.father}\n      >\n        {keysForHeader.map((key, i) => (\n          i === 0 ? (\n            <th scope=\"row\" key={key}>{person[key]}</th>\n          ) : key === 'name'\n            ? (\n              <PersonName name={person[key]} sex={person.sex as string} key={key} />\n            )\n            : (\n              <td\n                className={cn(\n                  {\n                    GoodAge: key === 'age'\n                        && person.age\n                        && person.age >= 65,\n                  },\n                )}\n                key={key}\n              >\n                {person[key]}\n              </td>\n            )\n        ))}\n      </tr>\n    ))}\n  </tbody>\n);\n","import React, { useState } from 'react';\nimport { THead } from './THead';\nimport { TBody } from './TBody';\n\ninterface Props {\n  people: People[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, sortBy }) => {\n  const [selectedPerson, setSelectedPerson] = useState<People[]>([]);\n  let keysForHeader: string[] = [];\n\n  const selectPerson = (id: number) => {\n    const serchedPerson = people.find(person => person.id === id);\n\n    if (serchedPerson) {\n      setSelectedPerson([serchedPerson]);\n    }\n  };\n\n  if (people.length) {\n    keysForHeader = Object.keys(people[0]);\n  }\n\n  return (\n    <table className=\"PeopleTable table\">\n      <THead\n        keysForHeader={keysForHeader}\n        sortBy={sortBy}\n      />\n      <TBody\n        selectedPerson={selectedPerson}\n        selectPerson={selectPerson}\n        keysForHeader={keysForHeader}\n        people={people}\n      />\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  startDebounce: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const SearchPeople: React.FC<Props> = ({ startDebounce }) => {\n  return (\n    <div className=\"input-group input-group-lg myInput\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        aria-label=\"Sizing example input\"\n        aria-describedby=\"inputGroup-sizing-lg\"\n        placeholder=\"Write for search\"\n        onChange={e => startDebounce(e)}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  nameValue: string;\n  handleInputName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  errorName: boolean;\n  bornValue: string;\n  handleInputAgeInfo: (e: React.ChangeEvent<HTMLInputElement>, param: string) => void;\n  errorBorn: boolean;\n  diedValue: string;\n  errorDied: boolean;\n  blurValidation: (param: string) => void;\n}\n\nexport const AddPersonInputs: React.FC<Props> = ({\n  nameValue,\n  handleInputName,\n  errorName,\n  bornValue,\n  handleInputAgeInfo,\n  errorBorn,\n  diedValue,\n  errorDied,\n  blurValidation,\n}) => (\n  <>\n    <label className=\"add__inp\">\n        Name:\n      <input\n        type=\"text\"\n        value={nameValue}\n        onChange={e => handleInputName(e)}\n        placeholder=\" Write the name\"\n        onBlur={() => blurValidation('name')}\n        className={cn({\n          'inp-err': errorName,\n        })}\n      />\n    </label>\n    {errorName && (<span className=\"error__name\">Please, write correctly name</span>)}\n    <label className=\"add__inp\">\n        Born:\n      <input\n        type=\"text\"\n        value={bornValue}\n        onChange={e => handleInputAgeInfo(e, 'born')}\n        placeholder=\" Year of born  'XXXX'\"\n        onBlur={() => blurValidation('born')}\n        className={cn({\n          'inp-err': errorBorn,\n        })}\n      />\n    </label>\n    {errorBorn && (<span className=\"error__born\">Please, write correctly born year</span>)}\n    <label className=\"add__inp\">\n        Died:\n      <input\n        type=\"text\"\n        value={diedValue}\n        onChange={e => handleInputAgeInfo(e, 'died')}\n        placeholder=\" Year of died  'XXXX'\"\n        onBlur={() => blurValidation('died')}\n        className={cn({\n          'inp-err': errorDied,\n        })}\n      />\n    </label>\n    {errorDied && (<span className=\"error__year\">Please, write correctly died year</span>)}\n  </>\n);\n","import React from 'react';\n\ninterface Props {\n  errorBorn: boolean;\n  errorDied: boolean;\n  errorName: boolean;\n  bigDifference: boolean;\n  validation: (param: string) => void;\n  minusDifference: boolean;\n}\n\nexport const AddPersonButton: React.FC<Props> = ({\n  errorBorn,\n  errorDied,\n  errorName,\n  bigDifference,\n  validation,\n  minusDifference,\n}) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"add__button\"\n      disabled={\n        errorBorn || errorDied || errorName || bigDifference || minusDifference\n      }\n      onClick={() => validation('')}\n    >\n        Add person\n    </button>\n    {bigDifference && (\n      <span className=\"error__difference\">\n        The difference between the year of birth and death should not exceed 150\n      </span>\n    )}\n    {minusDifference && !bigDifference && (\n      <span className=\"error__difference--small\">\n          Year of birth should be more than death\n      </span>\n    )}\n  </>\n);\n","import React from 'react';\n\ninterface Props {\n  genderValue: string;\n  chooseGender: (param: string) => void;\n  errorGender: boolean;\n}\n\nexport const SexSelect: React.FC<Props> = ({ genderValue, chooseGender, errorGender }) => {\n  return (\n    <div className=\"gender__container\">\n      <label className=\"add__rad\">\nMale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'm'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('m')}\n        />\n      </label>\n      <label className=\"add__rad\">\nFemale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'f'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('f')}\n        />\n      </label>\n      {errorGender && (<p className=\"error__gender\">Please, choose gender</p>)}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  people: People[];\n  fatherValue: string;\n  chooseFather: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorFather: boolean;\n}\n\nexport const AddFather: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseFather,\n  errorFather,\n}) => {\n  const fathers = people\n    .map(person => (person.sex === 'm' ? person.name : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__father\">\n        {' '}\nChoose father:\n        <select value={fatherValue} onChange={e => chooseFather(e)}>\n          <option value=\"\" hidden>Choose here</option>\n          {fathers.map(male => (\n            <option\n              value={male}\n              key={male + new Date().getTime}\n            >\n              {male}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorFather && (<span className=\"error__father\">Choose father</span>)}\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  people: People[];\n  fatherValue: string;\n  chooseMother: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorMother: boolean;\n}\n\nexport const AddMother: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseMother,\n  errorMother,\n}) => {\n  const mother = people\n    .map(person => (person.sex === 'f' ? person.name : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__mother\">\n        {' '}\nChoose mother:\n        <select value={fatherValue} onChange={e => chooseMother(e)}>\n          <option value=\"\" hidden>Choose here</option>\n          {mother.map(female => (\n            <option\n              value={female}\n              key={female + new Date().getTime}\n            >\n              {female}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorMother && (<span className=\"error__mother\">Choose mother</span>)}\n    </>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport { AddPersonInputs } from './AddPersonInputs';\nimport { AddPersonButton } from './AddPersonButton';\nimport { SexSelect } from './SexParametrs';\nimport { AddFather } from './AddFather';\nimport { AddMother } from './AddMother';\n\nconst pattern = /[0-9]| {2}|\\!|\\.|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|^\\s+/g;\nconst currentYear = new Date().getFullYear();\n\ninterface Props {\n  people: People[];\n  addPerson: (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => void;\n}\n\nexport const AddPerson: React.FC<Props> = ({ people, addPerson }) => {\n  const [nameValue, setNameValue] = useState('');\n  const [bornValue, setBornValue] = useState('');\n  const [diedValue, setDiedValue] = useState('');\n  const [gender, setGender] = useState('');\n  const [father, setFather] = useState('');\n  const [mother, setMother] = useState('');\n  const [errorMother, setErrorMother] = useState(false);\n  const [errorFather, setErrorFather] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [errorBorn, setErrorBorn] = useState(false);\n  const [errorDied, setErrorDied] = useState(false);\n  const [minusDifference, setMinusDifference] = useState(false);\n  const [bigDifference, setBigDifference] = useState(false);\n  const [errorGender, setErrorGender] = useState(false);\n\n  const handleInputName = (e: ChangeEvent<HTMLInputElement>) => {\n    setNameValue(e.target.value.replace(pattern, ''));\n\n    if (!e.target.value) {\n      setErrorName(true);\n    } else {\n      setErrorName(false);\n    }\n  };\n\n  const handleInputAgeInfo = (e: ChangeEvent<HTMLInputElement>, order: string) => {\n    const eventValue = e.target.value.replace(/\\D/g, '');\n\n    if (order === 'born') {\n      setBornValue(eventValue);\n\n      if (!e.target.value) {\n        setErrorBorn(true);\n        setBigDifference(false);\n      } else {\n        setErrorBorn(false);\n        setMinusDifference(false);\n        setBigDifference(false);\n      }\n    }\n\n    if (order === 'died') {\n      setDiedValue(eventValue);\n\n      if (!eventValue) {\n        setErrorDied(true);\n        setBigDifference(false);\n      } else {\n        setErrorDied(false);\n        setBigDifference(false);\n        setMinusDifference(false);\n      }\n    }\n  };\n\n  const blurValidation = (blurParam: string) => {\n    if (!nameValue) {\n      if (blurParam === 'name') {\n        setErrorName(true);\n\n        return;\n      }\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      if (blurParam === 'born') {\n        setErrorBorn(true);\n\n        return;\n      }\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      if (blurParam === 'died') {\n        setErrorDied(true);\n      }\n    }\n  };\n\n  const validation = () => {\n    if (+bornValue > +diedValue) {\n      console.log('more than');\n      setMinusDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n\n      return;\n    }\n\n    if (!nameValue) {\n      setErrorName(true);\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      setErrorBorn(true);\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      setErrorDied(true);\n    }\n\n    if (+diedValue - +bornValue >= 150) {\n      setBigDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n\n      return;\n    }\n\n    if (!father) {\n      setErrorFather(true);\n    }\n\n    if (!mother) {\n      setErrorMother(true);\n    }\n\n    if (!gender) {\n      setErrorGender(true);\n    }\n\n\n    if (\n      !errorMother && !errorFather && !errorName\n      && !errorBorn && !errorDied && !minusDifference\n      && !bigDifference && !errorGender\n    ) {\n      console.log(minusDifference);\n      console.log('in');\n      addPerson(nameValue, bornValue, diedValue, gender, father, mother);\n      reset();\n    }\n  };\n\n  const chooseGenderStatus = (param: string) => {\n    setGender(param);\n    setErrorGender(false);\n  };\n\n  const chooseFather = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFather(e.target.value);\n    setErrorFather(false);\n  };\n\n  const chooseMother = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setMother(e.target.value);\n    setErrorMother(false);\n  };\n\n  const reset = () => {\n    setNameValue('');\n    setBornValue('');\n    setDiedValue('');\n    setGender('');\n    setFather('');\n    setMother('');\n    setBigDifference(false);\n  };\n\n  return (\n    <div className=\"add__people\">\n      <p className=\"add__title\">\n        Add new person\n      </p>\n      <form onSubmit={e => {\n        e.preventDefault();\n      }}\n      >\n        <AddPersonInputs\n          nameValue={nameValue}\n          handleInputName={handleInputName}\n          errorName={errorName}\n          bornValue={bornValue}\n          handleInputAgeInfo={handleInputAgeInfo}\n          errorBorn={errorBorn}\n          diedValue={diedValue}\n          errorDied={errorDied}\n          blurValidation={blurValidation}\n        />\n        <SexSelect\n          genderValue={gender}\n          chooseGender={chooseGenderStatus}\n          errorGender={errorGender}\n        />\n        <AddFather\n          people={people}\n          fatherValue={father}\n          chooseFather={chooseFather}\n          errorFather={errorFather}\n        />\n        <AddMother\n          people={people}\n          fatherValue={mother}\n          chooseMother={chooseMother}\n          errorMother={errorMother}\n        />\n        <AddPersonButton\n          errorBorn={errorBorn}\n          errorDied={errorDied}\n          errorName={errorName}\n          bigDifference={bigDifference}\n          minusDifference={minusDifference}\n          validation={validation}\n        />\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport './App.scss';\n\nimport { getPeople } from './helper/getPeople';\nimport { PeopleTable } from './components/PeopleTable';\nimport { debounce } from './helper/debounce';\nimport { SearchPeople } from './components/SearchPeople';\nimport { AddPerson } from './components/AddPerson';\n\n\nconst App = () => {\n  const [people, setPeople] = useState<People[]>([]);\n  const [query, setQuery] = useState('');\n  const [sortMethod, setSortMethod] = useState('id');\n\n  useEffect(() => {\n    getPeople()\n      .then(people => setPeople(people));\n  }, []);\n\n  const filterPeople = () => {\n    if (!query) {\n      return people;\n    }\n\n    const filter = people\n      .filter(person => {\n        const { name } = person;\n        const { mother } = person;\n        const { father } = person;\n        const searchQuery = query.toLowerCase();\n\n        if (!searchQuery) {\n          return false;\n        }\n\n        if (name.toLowerCase().includes(searchQuery)\n          || mother.toLowerCase().includes(searchQuery)\n          || father.toLowerCase().includes(searchQuery)) {\n          return true;\n        }\n\n        return false;\n      });\n\n    return filter;\n  };\n\n  const startDebounce = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    debounceWrapper(value);\n  };\n\n  const debounceWrapper = debounce((value: string) => setQuery(value), 1000);\n\n\n  const filteredPeople = useMemo(\n    () => filterPeople(),\n    [query, people],\n  );\n\n  const sortBy = (sortParam: string, sortType: string) => {\n    if (sortMethod === sortParam) {\n      setPeople([...people].reverse());\n\n      return;\n    }\n\n    const sortedPeople = [...people].sort(\n      (a: People, b: People): number => {\n        const comperator1 = a[sortParam] || '';\n        const comperator2 = b[sortParam] || '';\n\n        if (sortType === 'number') {\n          return Number(comperator1) - Number(comperator2);\n        }\n\n        if (sortType === 'string') {\n          return (comperator1 as string).localeCompare(comperator2 as string);\n        }\n\n        return 0;\n      },\n    );\n\n    setSortMethod(sortParam);\n    setPeople(sortedPeople);\n  };\n\n  const addPerson = (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => {\n    const allId: number[] = people.map(person => person.id as number);\n    const nextId = Math.max(...allId) + 1;\n    const age = +died - +born;\n    const century = Math.ceil(+born / 100);\n\n    const newPerson = {\n      id: nextId,\n      name,\n      born: +born,\n      died: +died,\n      sex,\n      father,\n      mother,\n      age,\n      century,\n      children: '',\n    };\n\n    setPeople([...people, newPerson]);\n  };\n\n  return (\n    <div className=\"App\">\n      <AddPerson people={people} addPerson={addPerson} />\n      <SearchPeople startDebounce={startDebounce} />\n      <PeopleTable people={filteredPeople} sortBy={sortBy} />\n    </div>\n  );\n};\n\nexport default App;\n","export const debounce = (f, delay) => {\n  let timerId;\n\n  const debounced = (...args) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  }\n\n  return debounced;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}