{"version":3,"sources":["helper/getPeople.js","components/THead.tsx","components/PersonName.tsx","components/TBody.tsx","components/PeopleTable.tsx","helper/debounce.js","components/SearchPeople.tsx","components/AddPersonInputs.tsx","components/AddPersonButton.tsx","components/SexParametrs.tsx","components/AddFather.tsx","components/AddMother.tsx","components/AddPerson.tsx","components/sortedMethos.ts","App.tsx","index.tsx"],"names":["getPeople","a","fetch","people","json","preparedPeopleData","map","i","id","mother","father","age","died","born","century","Math","ceil","children","person","name","filter","join","THead","keysForHeader","sortBy","sortedMethods","sex","className","key","scope","onClick","PersonName","cn","TBody","selectPerson","selectedPerson","GoodAge","PeopleTable","useState","setSelectedPerson","match","useRouteMatch","history","useHistory","location","useLocation","useEffect","params","length","findId","find","pers","toLowerCase","replace","man","path","push","pathname","search","Object","keys","debounce","f","delay","timerId","clearTimeout","args","setTimeout","type","sortOrder","SearchPeople","startDebounce","searchParams","URLSearchParams","query","get","sorting","order","debounceWrapper","useCallback","value","set","delete","toString","console","log","planSetQuery","aria-label","aria-describedby","placeholder","defaultValue","onChange","e","target","AddPersonInputs","nameValue","handleInputName","errorName","bornValue","handleInputAgeInfo","errorBorn","diedValue","errorDied","blurValidation","onBlur","AddPersonButton","bigDifference","validation","minusDifference","disabled","SexSelect","genderValue","chooseGender","errorGender","checked","AddFather","fatherValue","chooseFather","errorFather","fathers","hidden","male","Date","getTime","AddMother","chooseMother","errorMother","female","pattern","currentYear","getFullYear","AddPerson","addPerson","setNameValue","setBornValue","setDiedValue","gender","setGender","setFather","setMother","setErrorMother","setErrorFather","setErrorName","setErrorBorn","setErrorDied","setMinusDifference","setBigDifference","setErrorGender","reset","onSubmit","preventDefault","eventValue","blurParam","param","App","setPeople","setQuery","firstStart","setFirstStart","then","sortParam","sortType","orderParam","sortedPeople","sort","b","comperator1","comperator2","Number","localeCompare","filteredPeople","useMemo","searchQuery","includes","allId","newPerson","max","to","activeClassName","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1645345c.chunk.js","sourcesContent":["export const getPeople = async () => {\n  const people = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  let preparedPeopleData = await people.json();\n  preparedPeopleData = preparedPeopleData.map((people, i) => ({\n    id: i + 1,\n    ...people,\n    mother: people.mother\n      ? people.mother\n      : '',\n    father: people.father\n      ? people.father\n      : '',\n    age: people.died - people.born,\n    century: Math.ceil(people.died / 100),\n    children: preparedPeopleData.map(person => {\n      if (people.name === person.father || people.name === person.mother) {\n        return person.name;\n      }\n    })\n      .filter(person => person)\n      .join(', '),\n  }))\n\n  return preparedPeopleData;\n}\n","import React from 'react';\n\ninterface Props {\n  keysForHeader: string[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const THead: React.FC<Props> = ({ keysForHeader, sortBy }) => {\n  const sortedMethods: SortMethods = {\n    id: 'number',\n    name: 'string',\n    sex: 'string',\n    born: 'number',\n    father: 'string',\n    mother: 'string',\n    died: 'number',\n    age: 'number',\n    century: 'number',\n    children: 'string',\n  };\n\n  return (\n    <thead className=\"thead-light myThead\">\n      <tr>\n        {keysForHeader.map(key => (\n          <th\n            scope=\"col\"\n            key={key}\n            onClick={() => sortBy(key, sortedMethods[key])}\n          >\n            {key}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  name: string;\n  sex: string;\n  born: number;\n}\n\nexport const PersonName: React.FC<Props> = ({ name, sex, born }) => {\n  return (\n    <td\n      scope=\"row\"\n      className={\n        cn({\n          'Person--name__male': sex === 'm',\n          'Person--name__female': sex === 'f',\n          'Old-birth': born <= 1650,\n        })\n      }\n    >\n      {name}\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PersonName } from './PersonName';\n\ninterface Props {\n  keysForHeader: string[];\n  people: People[];\n  selectPerson: (id: number) => void;\n  selectedPerson: number;\n}\n\nexport const TBody: React.FC<Props> = ({\n  keysForHeader,\n  people,\n  selectPerson,\n  selectedPerson,\n}) => (\n  <tbody>\n    {people.map(person => (\n      <tr\n        className={cn(\n          `Person--lived-in-${person.century}`,\n          {\n            'Person--male': person.sex === 'm',\n            'Person--female': person.sex === 'f',\n            'Person--selected': selectedPerson === person.id,\n          },\n        )}\n        onClick={() => selectPerson(person.id as number)}\n        key={person.name + person.father}\n      >\n        {keysForHeader.map((key, i) => (\n          i === 0 ? (\n            <th scope=\"row\" key={key}>{person[key]}</th>\n          ) : key === 'name'\n            ? (\n              <PersonName\n                name={person[key]}\n                sex={person.sex as string}\n                key={key}\n                born={person.born as number}\n              />\n            )\n            : (\n              <td\n                className={cn(\n                  {\n                    GoodAge: key === 'age'\n                          && person.age\n                          && person.age >= 65,\n                  },\n                )}\n                key={key}\n              >\n                {person[key]}\n              </td>\n            )\n        ))}\n      </tr>\n    ))}\n  </tbody>\n);\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch, useLocation } from 'react-router-dom';\nimport { THead } from './THead';\nimport { TBody } from './TBody';\n\ninterface Props {\n  people: People[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, sortBy }) => {\n  const [selectedPerson, setSelectedPerson] = useState(0);\n  let keysForHeader: string[] = [];\n  const match: Match = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (match.params.id && people.length) {\n      const findId = people\n        .find(pers => pers.name.toLowerCase().replace(/ /g, '-') === match.params.id);\n\n      if (findId) {\n        setSelectedPerson(findId.id as number);\n      }\n    }\n  }, [people]);\n\n  const selectPerson = (id: number) => {\n    setSelectedPerson(id);\n  };\n\n  useEffect(() => {\n    const name = people.find(man => man.id === selectedPerson)?.name;\n\n    if (name) {\n      const path = `/people/${name.toLowerCase().replace(/ /g, '-')}`;\n\n      history.push({\n        pathname: path,\n        search: location.search,\n      });\n    }\n  }, [selectedPerson]);\n\n  if (people.length) {\n    keysForHeader = Object.keys(people[0]);\n  }\n\n  return (\n    <>\n      <table className=\"PeopleTable table\">\n        <THead\n          keysForHeader={keysForHeader}\n          sortBy={sortBy}\n        />\n        <TBody\n          selectedPerson={selectedPerson}\n          selectPerson={selectPerson}\n          keysForHeader={keysForHeader}\n          people={people}\n        />\n      </table>\n    </>\n  );\n};\n","export const debounce = (f, delay) => {\n  let timerId;\n\n  const debounced = (...args) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  }\n\n  return debounced;\n}\n","import React, { useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { debounce } from '../helper/debounce';\n\ninterface Props {\n  startDebounce: (str: string) => void;\n}\n\nlet type = '';\nlet sortOrder = '';\n\nexport const SearchPeople: React.FC<Props> = ({ startDebounce }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const sorting = searchParams.get('sortBy');\n  const order = searchParams.get('sortOrder');\n\n  if (sorting) {\n    type = sorting;\n  }\n\n  if (order) {\n    sortOrder = order;\n  }\n\n  useEffect(() => {\n    if (query) {\n      startDebounce(query);\n    }\n  }, []);\n\n  const setDebounce = (value: string) => {\n    debounceWrapper(value);\n  };\n\n  const planSetQuery = (value: string) => {\n    if (value) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    type && searchParams.set('sortBy', type);\n    sortOrder && searchParams.set('sortOrder', sortOrder);\n\n    history.push({\n      search: searchParams.toString(),\n    });\n    console.log(history);\n  };\n\n  const debounceWrapper = useCallback(\n    debounce((value: string) => planSetQuery(value), 1000),\n    [],\n  );\n\n  return (\n    <div className=\"input-group input-group-lg myInput\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        aria-label=\"Sizing example input\"\n        aria-describedby=\"inputGroup-sizing-lg\"\n        placeholder=\"Write for search\"\n        defaultValue={query}\n        onChange={e => {\n          setDebounce(e.target.value);\n          startDebounce(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  nameValue: string;\n  handleInputName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  errorName: boolean;\n  bornValue: string;\n  handleInputAgeInfo: (e: React.ChangeEvent<HTMLInputElement>, param: string) => void;\n  errorBorn: boolean;\n  diedValue: string;\n  errorDied: boolean;\n  blurValidation: (param: string) => void;\n}\n\nexport const AddPersonInputs: React.FC<Props> = ({\n  nameValue,\n  handleInputName,\n  errorName,\n  bornValue,\n  handleInputAgeInfo,\n  errorBorn,\n  diedValue,\n  errorDied,\n  blurValidation,\n}) => (\n  <>\n    <label className=\"add__inp\">\n        Name:\n      <input\n        type=\"text\"\n        value={nameValue}\n        onChange={e => handleInputName(e)}\n        placeholder=\" Write the name\"\n        onBlur={() => blurValidation('name')}\n        className={cn({\n          'inp-err': errorName,\n        })}\n      />\n    </label>\n    {errorName && (<span className=\"error__name\">Please, write correctly name</span>)}\n    <label className=\"add__inp\">\n        Born:\n      <input\n        type=\"text\"\n        value={bornValue}\n        onChange={e => handleInputAgeInfo(e, 'born')}\n        placeholder=\" Year of born  'XXXX'\"\n        onBlur={() => blurValidation('born')}\n        className={cn({\n          'inp-err': errorBorn,\n        })}\n      />\n    </label>\n    {errorBorn && (<span className=\"error__born\">Please, write correctly born year</span>)}\n    <label className=\"add__inp\">\n        Died:\n      <input\n        type=\"text\"\n        value={diedValue}\n        onChange={e => handleInputAgeInfo(e, 'died')}\n        placeholder=\" Year of died  'XXXX'\"\n        onBlur={() => blurValidation('died')}\n        className={cn({\n          'inp-err': errorDied,\n        })}\n      />\n    </label>\n    {errorDied && (<span className=\"error__year\">Please, write correctly died year</span>)}\n  </>\n);\n","import React from 'react';\n\ninterface Props {\n  errorBorn: boolean;\n  errorDied: boolean;\n  errorName: boolean;\n  bigDifference: boolean;\n  validation: (param: string) => void;\n  minusDifference: boolean;\n}\n\nexport const AddPersonButton: React.FC<Props> = ({\n  errorBorn,\n  errorDied,\n  errorName,\n  bigDifference,\n  validation,\n  minusDifference,\n}) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"add__button\"\n      disabled={\n        errorBorn || errorDied || errorName || bigDifference || minusDifference\n      }\n      onClick={() => validation('')}\n    >\n        Add person\n    </button>\n    {bigDifference && (\n      <span className=\"error__difference\">\n        The difference between the year of birth and death should not exceed 150\n      </span>\n    )}\n    {minusDifference && !bigDifference && (\n      <span className=\"error__difference--small\">\n          Year of birth should be more than death\n      </span>\n    )}\n  </>\n);\n","import React from 'react';\n\ninterface Props {\n  genderValue: string;\n  chooseGender: (param: string) => void;\n  errorGender: boolean;\n}\n\nexport const SexSelect: React.FC<Props> = ({ genderValue, chooseGender, errorGender }) => {\n  return (\n    <div className=\"gender__container\">\n      <label className=\"add__rad\">\nMale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'm'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('m')}\n        />\n      </label>\n      <label className=\"add__rad\">\nFemale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'f'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('f')}\n        />\n      </label>\n      {errorGender && (<p className=\"error__gender\">Please, choose gender</p>)}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  people: People[];\n  fatherValue: string;\n  chooseFather: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorFather: boolean;\n}\n\nexport const AddFather: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseFather,\n  errorFather,\n}) => {\n  const fathers = people\n    .map(person => (person.sex === 'm' ? person.name : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__father\">\n        {' '}\nChoose father:\n        <select value={fatherValue} onChange={e => chooseFather(e)}>\n          <option value=\"\" hidden>Choose here</option>\n          {fathers.map(male => (\n            <option\n              value={male}\n              key={male + new Date().getTime}\n            >\n              {male}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorFather && (<span className=\"error__father\">Choose father</span>)}\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  people: People[];\n  fatherValue: string;\n  chooseMother: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorMother: boolean;\n}\n\nexport const AddMother: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseMother,\n  errorMother,\n}) => {\n  const mother = people\n    .map(person => (person.sex === 'f' ? person.name : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__mother\">\n        {' '}\nChoose mother:\n        <select value={fatherValue} onChange={e => chooseMother(e)}>\n          <option value=\"\" hidden>Choose here</option>\n          {mother.map(female => (\n            <option\n              value={female}\n              key={female + new Date().getTime}\n            >\n              {female}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorMother && (<span className=\"error__mother\">Choose mother</span>)}\n    </>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport { AddPersonInputs } from './AddPersonInputs';\nimport { AddPersonButton } from './AddPersonButton';\nimport { SexSelect } from './SexParametrs';\nimport { AddFather } from './AddFather';\nimport { AddMother } from './AddMother';\n\nconst pattern = /[0-9]| {2}|\\!|\\.|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|^\\s+/g;\nconst currentYear = new Date().getFullYear();\n\ninterface Props {\n  people: People[];\n  addPerson: (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => void;\n}\n\nexport const AddPerson: React.FC<Props> = ({ people, addPerson }) => {\n  const [nameValue, setNameValue] = useState('');\n  const [bornValue, setBornValue] = useState('');\n  const [diedValue, setDiedValue] = useState('');\n  const [gender, setGender] = useState('');\n  const [father, setFather] = useState('');\n  const [mother, setMother] = useState('');\n  const [errorMother, setErrorMother] = useState(false);\n  const [errorFather, setErrorFather] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [errorBorn, setErrorBorn] = useState(false);\n  const [errorDied, setErrorDied] = useState(false);\n  const [minusDifference, setMinusDifference] = useState(false);\n  const [bigDifference, setBigDifference] = useState(false);\n  const [errorGender, setErrorGender] = useState(false);\n\n  const handleInputName = (e: ChangeEvent<HTMLInputElement>) => {\n    setNameValue(e.target.value.replace(pattern, ''));\n\n    if (!e.target.value) {\n      setErrorName(true);\n    } else {\n      setErrorName(false);\n    }\n  };\n\n  const handleInputAgeInfo = (e: ChangeEvent<HTMLInputElement>, order: string) => {\n    const eventValue = e.target.value.replace(/\\D/g, '');\n\n    if (order === 'born') {\n      setBornValue(eventValue);\n\n      if (!e.target.value) {\n        setErrorBorn(true);\n        setBigDifference(false);\n      } else {\n        setErrorBorn(false);\n        setMinusDifference(false);\n        setBigDifference(false);\n      }\n    }\n\n    if (order === 'died') {\n      setDiedValue(eventValue);\n\n      if (!eventValue) {\n        setErrorDied(true);\n        setBigDifference(false);\n      } else {\n        setErrorDied(false);\n        setBigDifference(false);\n        setMinusDifference(false);\n      }\n    }\n  };\n\n  const blurValidation = (blurParam: string) => {\n    if (!nameValue) {\n      if (blurParam === 'name') {\n        setErrorName(true);\n\n        return;\n      }\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      if (blurParam === 'born') {\n        setErrorBorn(true);\n\n        return;\n      }\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      if (blurParam === 'died') {\n        setErrorDied(true);\n      }\n    }\n  };\n\n  const validation = () => {\n    if (+bornValue > +diedValue) {\n      console.log('more than');\n      setMinusDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n\n      return;\n    }\n\n    if (!nameValue) {\n      setErrorName(true);\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      setErrorBorn(true);\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      setErrorDied(true);\n    }\n\n    if (+diedValue - +bornValue >= 150) {\n      setBigDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n\n      return;\n    }\n\n    if (!father) {\n      setErrorFather(true);\n    }\n\n    if (!mother) {\n      setErrorMother(true);\n    }\n\n    if (!gender) {\n      setErrorGender(true);\n    }\n\n\n    if (\n      !errorMother && !errorFather && !errorName\n      && !errorBorn && !errorDied && !minusDifference\n      && !bigDifference && !errorGender\n    ) {\n      console.log(minusDifference);\n      console.log('in');\n      addPerson(nameValue, bornValue, diedValue, gender, father, mother);\n      reset();\n    }\n  };\n\n  const chooseGenderStatus = (param: string) => {\n    setGender(param);\n    setErrorGender(false);\n  };\n\n  const chooseFather = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFather(e.target.value);\n    setErrorFather(false);\n  };\n\n  const chooseMother = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setMother(e.target.value);\n    setErrorMother(false);\n  };\n\n  const reset = () => {\n    setNameValue('');\n    setBornValue('');\n    setDiedValue('');\n    setGender('');\n    setFather('');\n    setMother('');\n    setBigDifference(false);\n  };\n\n  return (\n    <div className=\"add__people\">\n      <p className=\"add__title\">\n        Add new person\n      </p>\n      <form onSubmit={e => {\n        e.preventDefault();\n      }}\n      >\n        <AddPersonInputs\n          nameValue={nameValue}\n          handleInputName={handleInputName}\n          errorName={errorName}\n          bornValue={bornValue}\n          handleInputAgeInfo={handleInputAgeInfo}\n          errorBorn={errorBorn}\n          diedValue={diedValue}\n          errorDied={errorDied}\n          blurValidation={blurValidation}\n        />\n        <SexSelect\n          genderValue={gender}\n          chooseGender={chooseGenderStatus}\n          errorGender={errorGender}\n        />\n        <AddFather\n          people={people}\n          fatherValue={father}\n          chooseFather={chooseFather}\n          errorFather={errorFather}\n        />\n        <AddMother\n          people={people}\n          fatherValue={mother}\n          chooseMother={chooseMother}\n          errorMother={errorMother}\n        />\n        <AddPersonButton\n          errorBorn={errorBorn}\n          errorDied={errorDied}\n          errorName={errorName}\n          bigDifference={bigDifference}\n          minusDifference={minusDifference}\n          validation={validation}\n        />\n      </form>\n    </div>\n  );\n};\n","export const sortedMethods: SortMethods = {\n  id: 'number',\n  name: 'string',\n  sex: 'string',\n  born: 'number',\n  father: 'string',\n  mother: 'string',\n  died: 'number',\n  age: 'number',\n  century: 'number',\n  children: 'string',\n};\n","import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport './App.scss';\nimport {\n  Route, useLocation, useHistory, Redirect, NavLink\n} from 'react-router-dom';\n\nimport { getPeople } from './helper/getPeople';\nimport { PeopleTable } from './components/PeopleTable';\nimport { debounce } from './helper/debounce';\nimport { SearchPeople } from './components/SearchPeople';\nimport { AddPerson } from './components/AddPerson';\nimport { sortedMethods } from './components/sortedMethos';\n\nconst App = () => {\n  const [people, setPeople] = useState<People[]>([]);\n  const [query, setQuery] = useState('');\n  const [firstStart, setFirstStart] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sorting = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n\n  const sortByLineParam = () => {\n    if (!firstStart && sorting) {\n      setFirstStart(true);\n      sortBy(sorting, sortedMethods[sorting]);\n    }\n  };\n\n  useEffect(() => {\n    if (people.length) {\n      sortByLineParam();\n    }\n  }, [sorting, people]);\n\n  useEffect(() => {\n    getPeople()\n      .then(people => {\n        setPeople(people);\n      });\n  }, []);\n\n  const sortBy = (sortParam: string, sortType: string) => {\n    let orderParam = '';\n\n    if (sortOrder === 'asc') {\n      const sortedPeople = [...people].sort(\n        (a: People, b: People): number => {\n          const comperator1 = a[sortParam] || '';\n          const comperator2 = b[sortParam] || '';\n\n          if (sortType === 'number') {\n            return Number(comperator2) - Number(comperator1);\n          }\n\n          if (sortType === 'string') {\n            return (comperator2 as string).localeCompare(comperator1 as string);\n          }\n\n          return 0;\n        },\n      );\n\n      if (!firstStart) {\n        orderParam = 'asc';\n      } else {\n        orderParam = 'desc';\n      }\n\n      setPeople(sortedPeople);\n\n      searchParams.set('sortBy', `${sortParam}`);\n      searchParams.set('sortOrder', `${orderParam}`);\n\n      history.push({\n        search: searchParams.toString(),\n      });\n\n      setFirstStart(true);\n\n\n      return;\n    }\n\n    const sortedPeople = [...people].sort(\n      (a: People, b: People): number => {\n        const comperator1 = a[sortParam] || '';\n        const comperator2 = b[sortParam] || '';\n\n        if (sortType === 'number') {\n          return Number(comperator1) - Number(comperator2);\n        }\n\n        if (sortType === 'string') {\n          return (comperator1 as string).localeCompare(comperator2 as string);\n        }\n\n        return 0;\n      },\n    );\n\n    setPeople(sortedPeople);\n\n    if (!firstStart) {\n      orderParam = 'desc';\n    } else {\n      orderParam = 'asc';\n    }\n\n    searchParams.set('sortBy', `${sortParam}`);\n    searchParams.set('sortOrder', `${orderParam}`);\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n\n  const filterPeople = () => {\n    if (!query) {\n      return people;\n    }\n\n    const filter = people\n      .filter(person => {\n        const { name } = person;\n        const { mother } = person;\n        const { father } = person;\n        const searchQuery = query.toLowerCase();\n\n        if (!searchQuery) {\n          return false;\n        }\n\n        if (name.toLowerCase().includes(searchQuery)\n          || mother.toLowerCase().includes(searchQuery)\n          || father.toLowerCase().includes(searchQuery)) {\n          return true;\n        }\n\n        return false;\n      });\n\n    return filter;\n  };\n\n  const startDebounce = (value: string) => {\n    debounceWrapper(value);\n  };\n\n  const debounceWrapper = useCallback(\n    debounce((value: string) => setQuery(value), 1000),\n    [],\n  );\n\n\n  const filteredPeople = useMemo(\n    () => filterPeople(),\n    [query, people],\n  );\n\n  const addPerson = (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => {\n    const allId: number[] = people.map(person => person.id as number);\n    const nextId = Math.max(...allId) + 1;\n    const age = +died - +born;\n    const century = Math.ceil(+born / 100);\n\n    const newPerson = {\n      id: nextId,\n      name,\n      born: +born,\n      died: +died,\n      sex,\n      father,\n      mother,\n      age,\n      century,\n      children: '',\n    };\n\n    setPeople([...people, newPerson]);\n\n    return <Redirect to=\"/people/:id?\" />;\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul className=\"list\">\n          <li className=\"item\">\n            <NavLink\n              activeClassName=\"activeLink\"\n              className=\"linka\"\n              to=\"/\"\n              exact\n            >\n              Home\n            </NavLink>\n          </li>\n          <li className=\"item\">\n            <NavLink\n              activeClassName=\"activeLink\"\n              className=\"linka\"\n              to=\"/people\"\n            >\n              People Table\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Route\n        path=\"/people/:id?\"\n        render={() => (\n          <>\n            <AddPerson people={people} addPerson={addPerson} />\n            <SearchPeople startDebounce={startDebounce} />\n            <PeopleTable people={filteredPeople} sortBy={sortBy} />\n          </>\n        )}\n      />\n      <Route\n        path=\"/\"\n        render={() => (\n          <>\n            <h1 className=\"title\">Demo heaeder</h1>\n          </>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}