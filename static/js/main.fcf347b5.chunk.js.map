{"version":3,"sources":["helper/getPeople.js","components/sortedMethos.ts","components/THead.tsx","components/PersonName.tsx","components/TBody.tsx","components/PeopleTable.tsx","helper/debounce.js","components/SearchPeople.tsx","components/AddPersonInputs.tsx","components/AddPersonButton.tsx","components/SexParametrs.tsx","components/AddFather.tsx","components/AddMother.tsx","components/AddPerson.tsx","App.tsx","helper/sortPeople.js","helper/filterPeople.js","index.tsx"],"names":["getPeople","a","fetch","people","json","preparedPeopleData","map","i","id","mother","father","age","died","born","century","Math","ceil","children","person","name","filter","join","sortedMethods","sex","THead","keysForHeader","sortBy","className","key","scope","onClick","PersonName","cn","TBody","selectPerson","selectedPerson","GoodAge","PeopleTable","useState","setSelectedPerson","match","useRouteMatch","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","useEffect","params","length","findId","find","pers","toLowerCase","replace","man","path","push","pathname","toString","Object","keys","debounce","f","delay","timerId","clearTimeout","args","setTimeout","SearchPeople","startDebounce","query","useMemo","get","value","setValue","debounceWrapper","useCallback","set","delete","planSetQuery","type","aria-label","aria-describedby","placeholder","onChange","e","setDebounce","target","AddPersonInputs","nameValue","handleInputName","errorName","bornValue","handleInputAgeInfo","errorBorn","diedValue","errorDied","blurValidation","onBlur","AddPersonButton","bigDifference","validation","minusDifference","disabled","SexSelect","genderValue","chooseGender","errorGender","checked","AddFather","fatherValue","chooseFather","errorFather","fathers","hidden","male","Date","getTime","AddMother","chooseMother","errorMother","female","pattern","currentYear","getFullYear","AddPerson","addPerson","setNameValue","setBornValue","setDiedValue","gender","setGender","setFather","setMother","isAdd","setIsAdd","setErrorMother","setErrorFather","setErrorName","setErrorBorn","setErrorDied","setMinusDifference","setBigDifference","setErrorGender","reset","onSubmit","preventDefault","order","eventValue","blurParam","param","isError","console","log","to","App","setPeople","setQuery","sortingParam","setSortingParam","isReverse","setIsReverse","sorting","searchQuery","then","sortParam","sortType","sortedPeople","reverse","sort","b","comperator1","comperator2","localeCompare","sortPeople","filteredPeople","includes","filterPeople","allId","newPerson","max","activeClassName","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fcf347b5.chunk.js","sourcesContent":["export const getPeople = async () => {\n  const people = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  let preparedPeopleData = await people.json();\n  preparedPeopleData = preparedPeopleData.map((people, i) => ({\n    id: i + 1,\n    ...people,\n    mother: people.mother\n      ? people.mother\n      : '',\n    father: people.father\n      ? people.father\n      : '',\n    age: people.died - people.born,\n    century: Math.ceil(people.died / 100),\n    children: preparedPeopleData.map(person => {\n      if (people.name === person.father || people.name === person.mother) {\n        return person.name;\n      }\n    })\n      .filter(person => person)\n      .join(', '),\n  }))\n\n  return preparedPeopleData;\n}\n","export const sortedMethods: SortMethods = {\n  id: 'number',\n  name: 'string',\n  sex: 'string',\n  born: 'number',\n  father: 'string',\n  mother: 'string',\n  died: 'number',\n  age: 'number',\n  century: 'number',\n  children: 'string',\n};\n","import React from 'react';\nimport { sortedMethods } from './sortedMethos'\n\ninterface Props {\n  keysForHeader: string[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const THead: React.FC<Props> = ({ keysForHeader, sortBy }) => {\n\n  return (\n    <thead className=\"thead-light myThead\">\n      <tr>\n        {keysForHeader.map(key => (\n          <th\n            scope=\"col\"\n            key={key}\n            onClick={() => sortBy(key, sortedMethods[key])}\n          >\n            {key}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  name: string;\n  sex: string;\n  born: number;\n}\n\nexport const PersonName: React.FC<Props> = ({ name, sex, born }) => {\n  return (\n    <td\n      scope=\"row\"\n      className={\n        cn({\n          'Person--name__male': sex === 'm',\n          'Person--name__female': sex === 'f',\n          'Old-birth': born <= 1650,\n        })\n      }\n    >\n      {name}\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PersonName } from './PersonName';\n\ninterface Props {\n  keysForHeader: string[];\n  people: People[];\n  selectPerson: (id: number) => void;\n  selectedPerson: number;\n}\n\nexport const TBody: React.FC<Props> = ({\n  keysForHeader,\n  people,\n  selectPerson,\n  selectedPerson,\n}) => (\n  <tbody>\n    {people.map(person => (\n      <tr\n        className={cn(\n          `Person--lived-in-${person.century}`,\n          {\n            'Person--male': person.sex === 'm',\n            'Person--female': person.sex === 'f',\n            'Person--selected': selectedPerson === person.id,\n          },\n        )}\n        onClick={() => selectPerson(person.id as number)}\n        key={person.name + person.father}\n      >\n        {keysForHeader.map((key, i) => (\n          i === 0 ? (\n            <th scope=\"row\" key={key}>{person[key]}</th>\n          ) : key === 'name'\n            ? (\n              <PersonName\n                name={person[key]}\n                sex={person.sex as string}\n                key={key}\n                born={person.born as number}\n              />\n            )\n            : (\n              <td\n                className={cn(\n                  {\n                    GoodAge: key === 'age'\n                          && person.age\n                          && person.age >= 65,\n                  },\n                )}\n                key={key}\n              >\n                {person[key]}\n              </td>\n            )\n        ))}\n      </tr>\n    ))}\n  </tbody>\n);\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch, useLocation } from 'react-router-dom';\nimport { THead } from './THead';\nimport { TBody } from './TBody';\n\ninterface Props {\n  people: People[];\n  sortBy: (sortParam: string, sortType: string) => void;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, sortBy }) => {\n  const [selectedPerson, setSelectedPerson] = useState(0);\n  let keysForHeader: string[] = [];\n  const match: Match = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    if (match.params.id && people.length) {\n      const findId = people\n        .find(pers => pers.name.toLowerCase().replace(/ /g, '-') === match.params.id);\n\n      if (findId) {\n        setSelectedPerson(findId.id as number);\n      }\n    }\n  }, [people]);\n\n  const selectPerson = (id: number) => {\n    setSelectedPerson(id);\n  };\n\n\n  useEffect(() => {\n    const name = people.find(man => man.id === selectedPerson)?.name;\n\n    if (name) {\n      const path = `/people/${name.toLowerCase().replace(/ /g, '-')}`;\n\n      history.push({\n        pathname: path,\n        search: location.search,\n      });\n    }\n  }, [selectedPerson]);\n\n  useEffect(() => {\n    history.push({\n      pathname: `/people${searchParams.toString() ? '?' + searchParams.toString() : ''}`\n    })\n  }, [])\n\n  if (people.length) {\n    keysForHeader = Object.keys(people[0]);\n  }\n\n  return (\n    <>\n      <table className=\"PeopleTable table\">\n        <THead\n          keysForHeader={keysForHeader}\n          sortBy={sortBy}\n        />\n        <TBody\n          selectedPerson={selectedPerson}\n          selectPerson={selectPerson}\n          keysForHeader={keysForHeader}\n          people={people}\n        />\n      </table>\n    </>\n  );\n};\n","export const debounce = (f, delay) => {\n  let timerId;\n\n  const debounced = (...args) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  }\n\n  return debounced;\n}\n","import React, { useEffect, useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { debounce } from '../helper/debounce';\n\ninterface Props {\n  startDebounce: (str: string) => void;\n}\n\nexport const SearchPeople: React.FC<Props> = ({ startDebounce }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = useMemo(() => searchParams.get(\"query\"), [searchParams]);\n  const [value, setValue] = useState('');\n\n  if (query && query !== value) {\n    setValue(query);\n  }\n\n  useEffect(() => {\n    startDebounce('')\n  }, [])\n\n  useEffect(() => {\n    if (query) {\n      startDebounce(query);\n    }\n  }, []);\n\n  const setDebounce = (value: string) => {\n    debounceWrapper(value);\n  };\n\n  const planSetQuery = (value: string) => {\n    if (value) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  const debounceWrapper = useCallback(\n    debounce((value: string) => planSetQuery(value), 1000),\n    [],\n  );\n\n  return (\n    <div className=\"input-group input-group-lg myInput\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        aria-label=\"Sizing example input\"\n        aria-describedby=\"inputGroup-sizing-lg\"\n        placeholder=\"Write for search\"\n        value={value}\n        onChange={e => {\n          setDebounce(e.target.value);\n          startDebounce(e.target.value);\n          setValue(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  nameValue: string;\n  handleInputName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  errorName: boolean;\n  bornValue: string;\n  handleInputAgeInfo: (e: React.ChangeEvent<HTMLInputElement>, param: string) => void;\n  errorBorn: boolean;\n  diedValue: string;\n  errorDied: boolean;\n  blurValidation: (param: string) => void;\n}\n\nexport const AddPersonInputs: React.FC<Props> = ({\n  nameValue,\n  handleInputName,\n  errorName,\n  bornValue,\n  handleInputAgeInfo,\n  errorBorn,\n  diedValue,\n  errorDied,\n  blurValidation,\n}) => (\n  <>\n    <label className=\"add__inp\">\n        Name:\n      <input\n        type=\"text\"\n        value={nameValue}\n        onChange={e => handleInputName(e)}\n        placeholder=\" Write the name\"\n        onBlur={() => blurValidation('name')}\n        className={cn({\n          'inp-err': errorName,\n        })}\n      />\n    </label>\n    {errorName && (<span className=\"error__name\">Please, write correctly name</span>)}\n    <label className=\"add__inp\">\n        Born:\n      <input\n        type=\"text\"\n        value={bornValue}\n        onChange={e => handleInputAgeInfo(e, 'born')}\n        placeholder=\" Year of born  'XXXX'\"\n        onBlur={() => blurValidation('born')}\n        className={cn({\n          'inp-err': errorBorn,\n        })}\n      />\n    </label>\n    {errorBorn && (<span className=\"error__born\">Please, write correctly born year</span>)}\n    <label className=\"add__inp\">\n        Died:\n      <input\n        type=\"text\"\n        value={diedValue}\n        onChange={e => handleInputAgeInfo(e, 'died')}\n        placeholder=\" Year of died  'XXXX'\"\n        onBlur={() => blurValidation('died')}\n        className={cn({\n          'inp-err': errorDied,\n        })}\n      />\n    </label>\n    {errorDied && (<span className=\"error__year\">Please, write correctly died year</span>)}\n  </>\n);\n","import React from 'react';\n\ninterface Props {\n  errorBorn: boolean;\n  errorDied: boolean;\n  errorName: boolean;\n  bigDifference: boolean;\n  validation: (param: string) => void;\n  minusDifference: boolean;\n}\n\nexport const AddPersonButton: React.FC<Props> = ({\n  errorBorn,\n  errorDied,\n  errorName,\n  bigDifference,\n  validation,\n  minusDifference,\n}) => (\n    <>\n      <button\n        type=\"button\"\n        className=\"add__button\"\n        disabled={\n          errorBorn || errorDied || errorName || bigDifference || minusDifference\n        }\n        onClick={() => validation('')}\n      >\n        Add person\n    </button>\n      {bigDifference && (\n        <span className=\"error__difference\">\n          The difference between the year of birth and death should not exceed 150\n        </span>\n      )}\n      {minusDifference && !bigDifference && (\n        <span className=\"error__difference--small\">\n          Year of birth should be more than death\n        </span>\n      )}\n    </>\n  );\n","import React from 'react';\n\ninterface Props {\n  genderValue: string;\n  chooseGender: (param: string) => void;\n  errorGender: boolean;\n}\n\nexport const SexSelect: React.FC<Props> = ({ genderValue, chooseGender, errorGender }) => {\n  return (\n    <div className=\"gender__container\">\n      <label className=\"add__rad\">\nMale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'm'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('m')}\n        />\n      </label>\n      <label className=\"add__rad\">\nFemale\n        <input\n          type=\"radio\"\n          checked={genderValue === 'f'}\n          className=\"radio__btn\"\n          onChange={() => chooseGender('f')}\n        />\n      </label>\n      {errorGender && (<p className=\"error__gender\">Please, choose gender</p>)}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  bornValue: string;\n  people: People[];\n  fatherValue: string;\n  chooseFather: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorFather: boolean;\n}\n\nexport const AddFather: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseFather,\n  errorFather,\n  bornValue\n}) => {\n  const fathers = people\n    .map(person => (person.sex === 'm'\n      && person.born as number < +bornValue\n      && person.died as number > +bornValue\n      ? person.name\n      : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__father\">\n        {' '}\nChoose father:\n        <select value={fatherValue} onChange={e => chooseFather(e)}>\n          <option value=\"\" hidden>{bornValue ? 'Choose here' : 'Write birth year'}</option>\n          {fathers.map(male => (\n            <option\n              value={male}\n              key={male + new Date().getTime}\n            >\n              {male}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorFather && (<span className=\"error__father\">Choose father</span>)}\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  people: People[];\n  fatherValue: string;\n  chooseMother: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  errorMother: boolean;\n  bornValue: string;\n\n}\n\nexport const AddMother: React.FC<Props> = ({\n  people,\n  fatherValue,\n  chooseMother,\n  errorMother,\n  bornValue,\n}) => {\n  const mother = people\n    .map(person => (person.sex === 'f'\n      && person.born as number < +bornValue\n      && person.died as number > +bornValue\n      ? person.name\n      : ''))\n    .filter(person => person);\n\n  return (\n    <>\n      <label className=\"add__mother\">\n        {' '}\nChoose mother:\n        <select value={fatherValue} onChange={e => chooseMother(e)}>\n          <option value=\"\" hidden>{bornValue ? 'Choose here' : 'Write birth year'}</option>\n\n          {mother.map(female => (\n            <option\n              value={female}\n              key={female + new Date().getTime}\n            >\n              {female}\n            </option>\n          ))}\n        </select>\n      </label>\n      {errorMother && (<span className=\"error__mother\">Choose mother</span>)}\n    </>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport { AddPersonInputs } from './AddPersonInputs';\nimport { AddPersonButton } from './AddPersonButton';\nimport { SexSelect } from './SexParametrs';\nimport { AddFather } from './AddFather';\nimport { AddMother } from './AddMother';\nimport { Redirect } from 'react-router-dom'\n\nconst pattern = /[0-9]| {2}|\\!|\\.|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|^\\s+/g;\nconst currentYear = new Date().getFullYear();\n\ninterface Props {\n  people: People[];\n  addPerson: (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => void;\n}\n\nexport const AddPerson: React.FC<Props> = ({ people, addPerson }) => {\n  const [nameValue, setNameValue] = useState('');\n  const [bornValue, setBornValue] = useState('');\n  const [diedValue, setDiedValue] = useState('');\n  const [gender, setGender] = useState('');\n  const [father, setFather] = useState('');\n  const [mother, setMother] = useState('');\n  const [isAdd, setIsAdd] = useState(false);\n  const [errorMother, setErrorMother] = useState(false);\n  const [errorFather, setErrorFather] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [errorBorn, setErrorBorn] = useState(false);\n  const [errorDied, setErrorDied] = useState(false);\n  const [minusDifference, setMinusDifference] = useState(false);\n  const [bigDifference, setBigDifference] = useState(false);\n  const [errorGender, setErrorGender] = useState(false);\n\n\n  const handleInputName = (e: ChangeEvent<HTMLInputElement>) => {\n    setNameValue(e.target.value.replace(pattern, ''));\n\n    if (!e.target.value) {\n      setErrorName(true);\n    } else {\n      setErrorName(false);\n    }\n  };\n\n  const handleInputAgeInfo = (e: ChangeEvent<HTMLInputElement>, order: string) => {\n    const eventValue = e.target.value.replace(/\\D/g, '');\n\n    if (order === 'born') {\n      setBornValue(eventValue);\n\n      if (!e.target.value) {\n        setErrorBorn(true);\n        setBigDifference(false);\n      } else {\n        setErrorBorn(false);\n        setMinusDifference(false);\n        setBigDifference(false);\n      }\n    }\n\n    if (order === 'died') {\n      setDiedValue(eventValue);\n\n      if (!eventValue) {\n        setErrorDied(true);\n        setBigDifference(false);\n      } else {\n        setErrorDied(false);\n        setBigDifference(false);\n        setMinusDifference(false);\n      }\n    }\n  };\n\n  const blurValidation = (blurParam: string) => {\n    if (!nameValue) {\n      if (blurParam === 'name') {\n        setErrorName(true);\n\n        return;\n      }\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      if (blurParam === 'born') {\n        setErrorBorn(true);\n\n        return;\n      }\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      if (blurParam === 'died') {\n        setErrorDied(true);\n      }\n    }\n  };\n\n  const validation = (): any => {\n    let isError = false;\n\n    if (+bornValue > +diedValue) {\n      console.log('more than');\n      setMinusDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n      isError = true;\n      return;\n    }\n\n    if (!nameValue) {\n      setErrorName(true);\n      isError = true;\n    }\n\n    if (+bornValue > currentYear || !bornValue) {\n      setErrorBorn(true);\n      isError = true;\n    }\n\n    if (+diedValue > currentYear || !diedValue) {\n      setErrorDied(true);\n      isError = true;\n    }\n\n    if (+diedValue - +bornValue >= 150) {\n      setBigDifference(true);\n      setErrorDied(true);\n      setErrorBorn(true);\n      isError = true;\n      return;\n    }\n\n    if (!father) {\n      setErrorFather(true);\n      isError = true;\n    }\n\n    if (!mother) {\n      setErrorMother(true);\n      isError = true;\n    }\n\n    if (!gender) {\n      setErrorGender(true);\n\n      isError = true;\n\n    }\n\n\n    if (!isError) {\n      setIsAdd(true);\n      addPerson(nameValue, bornValue, diedValue, gender, father, mother);\n      reset();\n    }\n  };\n\n  const chooseGenderStatus = (param: string) => {\n    setGender(param);\n    setErrorGender(false);\n  };\n\n  const chooseFather = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFather(e.target.value);\n    setErrorFather(false);\n  };\n\n  const chooseMother = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setMother(e.target.value);\n    setErrorMother(false);\n  };\n\n  const reset = () => {\n    setNameValue('');\n    setBornValue('');\n    setDiedValue('');\n    setGender('');\n    setFather('');\n    setMother('');\n    setBigDifference(false);\n  };\n\n  return (\n    <div className=\"add__people\">\n      <p className=\"add__title\">\n        Add new person\n      </p>\n      <form onSubmit={e => {\n        e.preventDefault();\n      }}\n      >\n        <AddPersonInputs\n          nameValue={nameValue}\n          handleInputName={handleInputName}\n          errorName={errorName}\n          bornValue={bornValue}\n          handleInputAgeInfo={handleInputAgeInfo}\n          errorBorn={errorBorn}\n          diedValue={diedValue}\n          errorDied={errorDied}\n          blurValidation={blurValidation}\n        />\n        <SexSelect\n          genderValue={gender}\n          chooseGender={chooseGenderStatus}\n          errorGender={errorGender}\n        />\n        <AddFather\n          bornValue={bornValue}\n          people={people}\n          fatherValue={father}\n          chooseFather={chooseFather}\n          errorFather={errorFather}\n        />\n        <AddMother\n          people={people}\n          bornValue={bornValue}\n          fatherValue={mother}\n          chooseMother={chooseMother}\n          errorMother={errorMother}\n        />\n        <AddPersonButton\n          errorBorn={errorBorn}\n          errorDied={errorDied}\n          errorName={errorName}\n          bigDifference={bigDifference}\n          minusDifference={minusDifference}\n          validation={validation}\n        />\n\n        {isAdd && <Redirect to=\"/people\" />}\n      </form>\n    </div>\n  );\n};\n","import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport './App.scss';\nimport {\n  Route, useLocation, useHistory, Redirect, NavLink\n} from 'react-router-dom';\n\nimport { getPeople } from './helper/getPeople';\nimport { PeopleTable } from './components/PeopleTable';\nimport { debounce } from './helper/debounce';\nimport { SearchPeople } from './components/SearchPeople';\nimport { AddPerson } from './components/AddPerson';\nimport { filterPeople } from './helper/filterPeople'\nimport { sortPeople } from './helper/sortPeople';\nimport { sortedMethods } from './components/sortedMethos'\n\nconst App = () => {\n  const [people, setPeople] = useState<People[]>([]);\n  const [query, setQuery] = useState('');\n  const [sortingParam, setSortingParam] = useState('id');\n  const [isReverse, setIsReverse] = useState('asc');\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const sorting = useMemo(() => searchParams.get(\"sortBy\"), [searchParams]);\n  const order = useMemo(() => searchParams.get(\"sortOrder\"), [searchParams]);\n  const searchQuery = useMemo(() => searchParams.get(\"query\"), [searchParams]);\n\n  useEffect(() => {\n    if (((sorting !== sortingParam) || (order !== isReverse)) && sorting) {\n      sortBy(sorting, sortedMethods[sorting])\n    }\n\n    if (searchQuery && searchQuery !== query) {\n      setQuery(searchQuery)\n      startDebounce(searchQuery);\n    }\n\n  }, [searchParams])\n\n  useEffect(() => {\n    getPeople()\n      .then(people => {\n        setPeople(people);\n      });\n  }, []);\n\n  const sortBy = (sortParam: string, sortType: string) => {\n    if (sortParam === sortingParam) {\n      const sortedPeople = [...people].reverse();\n\n      setIsReverse(isReverse === 'asc' ? 'desc' : 'asc');\n      setPeople(sortedPeople);\n      console.log(isReverse);\n      searchParams.set('sortBy', `${sortParam}`);\n      searchParams.set('sortOrder', `${isReverse === 'asc' ? 'desc' : 'asc'}`);\n\n      history.push({\n        search: searchParams.toString(),\n      });\n\n      return;\n    }\n\n    const sortedPeople = sortPeople(people, sortParam, sortType)\n\n    setPeople(sortedPeople);\n\n    setIsReverse('asc');\n\n    searchParams.set('sortBy', `${sortParam}`);\n    searchParams.set('sortOrder', 'asc');\n\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setSortingParam(sortParam);\n  };\n\n  const startDebounce = (value: string) => {\n    debounceWrapper(value);\n  };\n\n  const debounceWrapper = useCallback(\n    debounce((value: string) => setQuery(value), 1000),\n    [],\n  );\n\n\n  const filteredPeople = useMemo(\n    () => filterPeople(query, people),\n    [query, people],\n  );\n\n  const addPerson = (\n    name: string,\n    born: string,\n    died: string,\n    sex: string,\n    father: string,\n    mother: string,\n  ) => {\n    const allId: number[] = people.map(person => person.id as number);\n    const nextId = Math.max(...allId) + 1;\n    const age = +died - +born;\n    const century = Math.ceil(+born / 100);\n\n    const newPerson = {\n      id: nextId,\n      name,\n      born: +born,\n      died: +died,\n      sex,\n      father,\n      mother,\n      age,\n      century,\n      children: '',\n    };\n\n    setPeople([...people, newPerson]);\n\n    return <Redirect to=\"/people/:id?\" />;\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul className=\"list\">\n          <li className=\"item\">\n            <NavLink\n              activeClassName=\"activeLink\"\n              className=\"linka\"\n              to=\"/\"\n              exact\n            >\n              Home\n            </NavLink>\n          </li>\n          <li className=\"item\">\n            <NavLink\n              activeClassName=\"activeLink\"\n              className=\"linka\"\n              to=\"/people\"\n            >\n              People Table\n            </NavLink>\n          </li>\n          <li className=\"item\">\n            <NavLink\n              activeClassName=\"activeLink\"\n              className=\"linka\"\n              to=\"/new-person\"\n            >\n              Add person\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Route\n        exact\n        path=\"/people/:id?\"\n        render={() => (\n          <>\n            <SearchPeople startDebounce={startDebounce} />\n            <PeopleTable people={filteredPeople} sortBy={sortBy} />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <>\n            <h1 className=\"title\">Demo Header</h1>\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/new-person\"\n        render={() => (\n          <>\n            <AddPerson people={people} addPerson={addPerson} />\n          </>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export const sortPeople = (people, sortParam, sortType) => {\n  return [...people].sort(\n    (a, b) => {\n      const comperator1 = a[sortParam];\n      const comperator2 = b[sortParam];\n\n      if (sortType === 'number') {\n        return comperator1 - comperator2;\n      }\n\n      if (sortType === 'string') {\n        return (comperator1).localeCompare(comperator2);\n      }\n\n      return 0;\n    });\n};\n","export const filterPeople = (query, people) => {\n  if (!query) {\n    return people;\n  }\n\n  const filter = people\n    .filter(person => {\n      const { name } = person;\n      const { mother } = person;\n      const { father } = person;\n      const searchQuery = query.toLowerCase();\n\n      if (!searchQuery) {\n        return false;\n      }\n\n      if (name.toLowerCase().includes(searchQuery)\n        || mother.toLowerCase().includes(searchQuery)\n        || father.toLowerCase().includes(searchQuery)) {\n        return true;\n      }\n\n      return false;\n    });\n\n  return filter;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}